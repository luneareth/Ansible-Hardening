##### REMOVE UNUSED PACKAGE ####
- name: "Check Firewalld"
  service:
    name: firewalld
    state: stopped
    enabled: no
  when:  ansible_os_family == "RedHat" or  ansible_os_family == 'CentOS'
  ignore_errors: true
  tags: 
    - iam-packages
    - package-remove
    - remove-firewalld
  
- name: Ensure firewalld is not installed
  package:
    name: firewalld
    state: absent
  when:  ansible_os_family == "RedHat" or  ansible_os_family == 'CentOS'
  tags: 
    - iam-packages
    - package-remove
    - remove-firewalld
  ignore_errors: true


##### REMOVE UNUSED PACKAGE ####
- name: "Check UFW"
  service:
    name: ufw
    state: stopped
    enabled: no
  when: ansible_os_family == 'Ubuntu' or ansible_os_family == 'Debian'
  ignore_errors: true
  tags: 
    - iam-packages
    - package-remove
    - remove-firewalld
  
- name: Ensure ufw is not installed
  apt:
    name: ufw
    state: absent
  when: ansible_os_family == 'Ubuntu' or ansible_os_family == 'Debian'
  tags: 
    - iam-packages
    - package-remove
    - remove-firewalld
  ignore_errors: true


### CENTOS or REDHAT
- name: "[RPM Based] Install epel-release Repo"
  package:
    name: epel-release
    state: present
    enablerepo: "epel"
  when:  ansible_os_family == 'CentOS' or ansible_os_family == 'RedHat' 
  ignore_errors: yes
  tags:
    - iam-packages
    - packages-rpm
    - rpm-epel_release

    
- name: "[RPM Based] Upgrade all packages to Latest"
  package:
    name: '*'
    state: latest
  when:  ansible_os_family == 'CentOS' or ansible_os_family == 'RedHat' 
  ignore_errors: yes
  tags:
    - iam-packages
    - packages-rpm
    - rpm-upgrade


- name: "[RPM Based] Packages Installation Needs"
  become: 'yes'
  package:
    name: "{{ packages_rpm }}"
    state: present
  when:  ansible_os_family == 'CentOS' or ansible_os_family == 'RedHat'
  ignore_errors: yes
  tags:
    - iam-packages
    - packages-rpm
    - rpm-install_packages_needs


##### DEBIAN or UBUNTU
- name: "[DEB Based] Update Repository List"
  apt:
    update_cache: yes
  when: ansible_os_family == 'Ubuntu' or ansible_os_family == 'Debian'
  ignore_errors: yes
  tags:
    - iam-packages
    - packages-deb
    - deb-update

    
- name: "[DEB Based] Update all packages to the latest version"
  apt:
    upgrade: dist
  when: ansible_os_family == 'Ubuntu' or ansible_os_family == 'Debian'
  ignore_errors: yes
  tags:
    - iam-packages
    - packages-deb
    - deb-upgrade


- name: "[DEB Based] Package Installation Needs"
  become: 'yes'
  apt:
    name: "{{ packages_deb }}"
    state: present
  when: ansible_os_family == 'Ubuntu' or ansible_os_family == 'Debian'
  ignore_errors: yes
  tags:
    - iam-packages
    - packages-deb
    - deb-install_packages_needs